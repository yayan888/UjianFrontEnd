import React from 'react'
import Axios from 'axios'
import Footer from '../components/footer'
import NavbarMaterial from '../components/navbar'
import Slider from "react-slick";
import {
    Button, Typography, FormControl, Input
} from '@material-ui/core';


class ProductDetails extends React.Component {
    constructor (props) {
        super(props)
        this.state = {
            product : null, stock: ''
        }
    }
    
    componentWillMount () {
        Axios.get(`http://localhost:2000/products${this.props.location.search}`)
        .then(res => {
            console.log(res.data)
            this.setState({product : res.data[0]})
        })
        .catch(err => console.log(err))
    }

    handleSize = (id) =>{
        const {product} = this.state
        console.log(id)
        console.log(typeof id)
        
        if(id === 0){
            this.setState({stock: product.stock[0].total})
        } else if(id === 1){
            this.setState({stock: product.stock[1]})
        } else if(id === 2){
            this.setState({stock: product.stock[2]})
        } else if(id === 3){
            this.setState({stock: product.stock[3]})
        } else if(id === 4){
            this.setState({stock: product.stock[4]})
        } else{
            this.setState({stock: ''})
        }
    }

    handleIncrement = () => {
        const {stock} = this.state
        if(stock>0 &&)
    }

    render () {
        console.log(this.props.location)
        const {product, stock} = this.state

        console.log(product)
        console.log(product !== null ? product.images[0] : null)
        const settings = {
            // customPaging: function(i) {
            //   return (
            //     <a>
            //       <img src={`${product.images[i+1]}`} height='100%' />
            //     </a>
            //   );
            // },
            // dots: true,
            // dotsClass: "slick-dots slick-thumb",
            // infinite: true,
            // speed: 500,
            // slidesToShow: 1,
            // slidesToScroll: 1,
            dots: true,
            infinite: true,
            speed: 500,
            slidesToShow: 1,
            slidesToScroll: 1
          };

        return (
            <div style={styles.root}>
                <NavbarMaterial/>
                <div style={styles.container}>
                    <div style={styles.containerLeft}>
                    { product !== null ?
                    <Slider {...settings} style={styles.slider}>
                    {/* <div style={styles.content}> */}
                        {/* <div> */}
                            <img src={product.images[0]} height='600px' style={styles.content}/>
                        {/* </div> */}
                        {/* <div> */}
                            <img src={product.images[1]} height='600px' style={styles.content}/>
                        {/* </div> */}
                        {/* <div> */}
                            <img src={product.images[2]} height='600px' style={styles.content}/>
                        {/* </div> */}
                        {/* <div> */}
                            <img src={product.images[3]} height='600px' style={styles.content}/>
                        {/* </div> */}
                        {/* <div> */}
                            <img src={product.images[4]} height='600px' style={styles.content}/>
                        {/* </div> */}
                        {/* <div> */}
                            <img src={product.images[5]} height='600px' style={styles.content}/>
                        {/* </div> */}
                    {/* </div>  */}
                    </Slider>
                    :
                        null
                    }
                    </div>
                    <div>
                        {
                        product !== null ?
                        <div style={styles.contentLeft}>
                            <Typography variant='h2'>{product.name}</Typography>
                            <Typography variant='p'>Rp.{product.price.toLocaleString()}</Typography> 
                            <div>

                            {product.stock.map((item)=>{
                                return(
                                    <div style={{display:'flex'}}>
                                        <Button 
                                        variant="outlined" 
                                            color="primary"
                                            onClick = {() => this.setState({stock:item.total})}
                                            >
                                            {item.code}
                                        </Button>
                                        <Typography variant='p'>{this.state.stock}</Typography> 
                                            <Button 
                                                variant="outlined"
                                                onClick={(index)=>stock > 0 ? this.setState({stock: stock-1}) : null}>-</Button>
                                            <Input></Input>
                                            <Button variant="outlined">+</Button>
                                    </div>
                                )
                            })}
                            </div>
                        </div>
                        :
                        null
                        }
                    </div>
                </div>
                <Footer/>
            </div>
        )
    }
}

const styles = {
    root: {
        width: '100%',
    },
    container: {
        height: `calc(100vh - 160px)`,
        backgroundColor: 'yellow',
        marginTop: '90px',
        display: 'flex',
    },
    containerLeft: {
        height: '90%',
        width: '46%',
        marginLeft: '30px'
    },
    slider: {
        height: '100%',
        // width: '100%',
        backgroundColor: 'aqua',
        display: 'flex',
        justifyContent: 'center',
        alignItems: 'center',
    },
    content : {
        // backgroundRepeat : 'no-repeat',
        // backgroundSize : 'cover',
        // height : '100vh',
        // width : '100%',
        // display: 'flex',
        // justifyContent: 'center',
        // alignItems: 'center',
        margin: 'auto'
    },
    contentLeft:{
        // display: 'flex',
        // flexDirection: 'column'
    }
}

export default ProductDetails